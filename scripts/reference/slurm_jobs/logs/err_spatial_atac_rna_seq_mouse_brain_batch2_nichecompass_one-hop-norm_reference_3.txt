/home/aih/sebastian.birk/miniconda3/envs/nichecompass-test/lib/python3.9/site-packages/scanpy/metrics/_gearys_c.py:293: UserWarning: 111 variables were constant, will return nan for these.
  warnings.warn(
/home/aih/sebastian.birk/workspace/projects/nichecompass/nichecompass/utils/gene_programs.py:203: ImplicitModificationWarning: Trying to modify attribute `._uns` of view, initializing view as actual.
  adata.uns[sources_categories_label_encoder_key] = sources_categories_label_encoder
window_graph:   0%|          | 0/4151 [00:00<?, ?it/s]window_graph:  13%|█▎        | 527/4151 [00:00<00:00, 5263.49it/s]window_graph:  27%|██▋       | 1122/4151 [00:00<00:00, 5657.06it/s]window_graph:  41%|████      | 1694/4151 [00:00<00:00, 5685.07it/s]window_graph:  56%|█████▌    | 2311/4151 [00:00<00:00, 5870.65it/s]window_graph:  70%|███████   | 2919/4151 [00:00<00:00, 5945.68it/s]window_graph:  85%|████████▍ | 3514/4151 [00:00<00:00, 2631.01it/s]window_graph: 100%|██████████| 4151/4151 [00:01<00:00, 3890.44it/s]
/home/aih/sebastian.birk/workspace/projects/nichecompass/nichecompass/models/nichecompass.py:319: UserWarning: Creating a tensor from a list of numpy.ndarrays is extremely slow. Please consider converting the list to a single numpy.ndarray with numpy.array() before converting to a tensor. (Triggered internally at ../torch/csrc/utils/tensor_new.cpp:245.)
  self.gene_peaks_mask_ = torch.sparse_coo_tensor(
/home/aih/sebastian.birk/miniconda3/envs/nichecompass-test/lib/python3.9/site-packages/numpy/core/fromnumeric.py:3464: RuntimeWarning: Mean of empty slice.
  return _methods._mean(a, axis=axis, dtype=dtype,
/home/aih/sebastian.birk/miniconda3/envs/nichecompass-test/lib/python3.9/site-packages/numpy/core/_methods.py:192: RuntimeWarning: invalid value encountered in scalar divide
  ret = ret.dtype.type(ret / rcount)
Traceback (most recent call last):
  File "/home/aih/sebastian.birk/workspace/projects/nichecompass-reproducibility/scripts/reference/../train_nichecompass_reference_model.py", line 920, in <module>
    model.train(n_epochs=args.n_epochs,
  File "/home/aih/sebastian.birk/workspace/projects/nichecompass/nichecompass/models/nichecompass.py", line 738, in train
    self.trainer.train(
  File "/home/aih/sebastian.birk/workspace/projects/nichecompass/nichecompass/train/trainer.py", line 419, in train
    train_optim_loss.backward()
  File "/home/aih/sebastian.birk/miniconda3/envs/nichecompass-test/lib/python3.9/site-packages/torch/_tensor.py", line 487, in backward
    torch.autograd.backward(
  File "/home/aih/sebastian.birk/miniconda3/envs/nichecompass-test/lib/python3.9/site-packages/torch/autograd/__init__.py", line 200, in backward
    Variable._execution_engine.run_backward(  # Calls into the C++ engine to run the backward pass
torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 1.68 GiB (GPU 0; 31.74 GiB total capacity; 22.91 GiB already allocated; 1.45 GiB free; 29.69 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF
